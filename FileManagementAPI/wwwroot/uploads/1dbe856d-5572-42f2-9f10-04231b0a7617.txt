-- Table: MembersDetail
CREATE TABLE membersdetail (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255) NOT NULL,
    email NVARCHAR(255),
    img NVARCHAR(255)
);

-- Table: Attachments
CREATE TABLE attachments (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255) NOT NULL,
    src NVARCHAR(255) NOT NULL,
    size NVARCHAR(50) NOT NULL,
    task_id INT NOT NULL,
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE
);

-- Table: Comments
CREATE TABLE comments (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(255) NOT NULL,
    src NVARCHAR(255),
    message NVARCHAR(MAX),
    date DATE,
    task_id INT NOT NULL,
    member_id INT NULL,
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE,
    FOREIGN KEY (member_id) REFERENCES membersdetail(id) ON DELETE SET NULL
);

-- Table: Labels
CREATE TABLE labels (
    color NVARCHAR(50) PRIMARY KEY,
    label NVARCHAR(255) NOT NULL
);

-- Table: Task Label (Many-to-Many relationship between Task and Label)
CREATE TABLE task_label (
    task_id INT NOT NULL,
    label_color NVARCHAR(50) NOT NULL,
    PRIMARY KEY (task_id, label_color),
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE,
    FOREIGN KEY (label_color) REFERENCES labels(color) ON DELETE CASCADE
);

-- Table: Task Member (Many-to-Many relationship between Task and Member)
CREATE TABLE task_member (
    task_id INT NOT NULL,
    member_id INT NOT NULL,
    PRIMARY KEY (task_id, member_id),
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE,
    FOREIGN KEY (member_id) REFERENCES membersdetail(id) ON DELETE CASCADE
);
